{"version":3,"sources":["assets/img/calendar.png","assets/img/logo_size.png","pages/Home/index.js","pages/Home/Home.js","pages/Login/index.js","pages/Login/Login.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/router/index.js","components/router/Navigate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","onClick","window","location","href","process","src","Calendar_image","alt","Component","Login","Navbar","props","state","showProfile","console","log","innerWidth","id","Logo","data-toggle","data-target","role","Navigate","currentPath","useLocation","pathname","component","exact","path","App","basename","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,0OCE5BC,E,uKCGX,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,SAAd,gCACA,uBAAGA,UAAU,YAAb,0HACA,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,2BAA2BC,QAAS,kBAAIC,OAAOC,SAASC,KAAMC,qBAAhF,WACA,4BAAQL,UAAU,mCAAmCC,QAAS,kBAAIC,OAAOC,SAASC,KAAOC,wBAAzF,YAGF,yBAAKL,UAAU,UACX,yBAAKA,UAAU,GAAGM,IAAKC,IAAgBC,IAAI,qB,GAd3BC,aCDnBC,E,uKCEX,OACE,4C,GAH6BD,a,iBCApBE,E,kDCEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,aAAa,GAHC,E,kGAWhB,OADAC,QAAQC,IAAId,OAAOe,YAEjB,yBAAKjB,UAAU,4DAA4DkB,GAAG,WAC5E,yBAAKlB,UAAU,aACb,uBAAGA,UAAU,eAAeI,KAAMC,eAChC,yBAAKC,IAAKa,IAAMnB,UAAU,OAAOQ,IAAI,UAGjC,4BAAQY,cAAY,WAAWpB,UAAU,iBAAiBqB,cAAY,aAClE,0BAAMrB,UAAU,WAAhB,qBACA,0BAAMA,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BkB,GAAG,YACzC,yBAAKlB,UAAU,4BACb,yBAAKA,UAAU,qBACb,mCAGJ,wBAAIA,UAAU,0BACV,wBAAIA,UAAU,WAAWsB,KAAK,gBAAe,uBAAGtB,UAAU,kBAAkBI,KAAMC,eAArC,eAGrD,yBAAKL,UAAU,gDACb,yBAAKA,UAAU,+CACX,yC,GApCcS,aCDrBc,ECKE,WACb,IAAIC,EAAcC,cAGlB,OAFAV,QAAQC,IAAIQ,GACZT,QAAQC,IAAIX,cAEJ,6BAC8B,WAAzBmB,EAAYE,SAAwB,KAAO,kBAAC,EAAD,MAC5C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,UAAW5B,EAAM6B,OAAK,EAACC,KAAM,MACpC,kBAAC,IAAD,CAAOF,UAAWjB,EAAOmB,KAAM,cCHpCC,MATf,WAEE,OADAf,QAAQC,IAAIX,cAEV,kBAAC,IAAD,CAAe0B,SAAU1B,cACvB,kBAAC,EAAD,QCIc2B,QACW,cAA7B9B,OAAOC,SAAS8B,UAEe,UAA7B/B,OAAOC,SAAS8B,UAEhB/B,OAAOC,SAAS8B,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.acd9e3a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.d64623a6.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_size.7a10865d.png\";","import Home from './Home';\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Calendar_image from '../../assets/img/calendar.png'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col\">\r\n        <div className=\"row\">\r\n          <div className=\"header-section\">\r\n              <h1 className=\"title\">FitSearch, Lets Fit Together</h1>\r\n              <p className=\"subtitle\">We provide the best service for you who search for a good place for excercise activity, like Gym, Swimming Pool, Spa. </p>\r\n              <div className=\"button-wrapper\">\r\n                <button className=\"btn btn-custom-secondary\" onClick={()=>window.location.href =process.env.PUBLIC_URL + \"/Login\"}>Sign up</button>\r\n                <button className=\"btn btn-custom-outline-secondary\" onClick={()=>window.location.href = process.env.PUBLIC_URL + \"/Register\"}>Sign up</button>\r\n              </div>\r\n\r\n              <div className=\"d-none\">\r\n                  <img className=\"\" src={Calendar_image} alt=\"Calendar\"/>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Login from './Login';\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nexport default class Login extends Component {\r\n  render() {\r\n    return (\r\n      <div> LOGIN </div>\r\n    );\r\n  }\r\n}\r\n","import Navbar from './Navbar';\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Logo from '../../assets/img/logo_size.png';\r\n\r\nexport default class Navbar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showProfile: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n  }\r\n  render() {\r\n    console.log(window.innerWidth);\r\n    return (\r\n      <nav className=\"navbar sticky-top navbar-expand-lg navbar-light bg-custom\" id=\"navcol1\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/\"}>\r\n            <img src={Logo} className=\"logo\" alt=\"Logo\"/>\r\n          </a>\r\n\r\n                <button data-toggle=\"collapse\" className=\"navbar-toggler\" data-target=\"#navcol-1\">\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    <div className=\"profile d-flex d-lg-none\">\r\n                      <div className=\"profile-thumbnail\">\r\n                        <p>AS</p>\r\n                      </div>\r\n                    </div>\r\n                    <ul className=\"nav navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\" role=\"presentation\"><a className=\"nav-item-custom\" href={process.env.PUBLIC_URL + \"/\"}>Merchant</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"profile d-none d-sm-none d-md-none d-lg-flex\">\r\n                  <div className=\"profile-thumbnail d-flex align-items-center\">\r\n                      <p>AS</p>\r\n                  </div>\r\n                </div>\r\n                \r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import Navigate from './Navigate';\r\n\r\nexport default Navigate;","import React from 'react';\r\nimport { Route, Switch, useLocation} from 'react-router-dom';\r\n\r\nimport Home from '../../pages/Home';\r\nimport Login from '../../pages/Login';\r\n\r\nimport Navbar from '../Navbar';\r\nconst Navigate = () => {\r\n    let currentPath = useLocation();\r\n    console.log(currentPath);\r\n    console.log(process.env.PUBLIC_URL);\r\n    return (\r\n            <div>\r\n                {currentPath.pathname === \"/Login\" ? null : <Navbar />  }\r\n                <Switch>            \r\n                    <Route component={Home} exact path={\"/\"} />\r\n                    <Route component={Login} path={\"/Login\"} />\r\n                </Switch>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Navigate;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport Navigate from './components/router';\n\nfunction App() {\n  console.log(process.env.PUBLIC_URL);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navigate />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}